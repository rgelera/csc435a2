here_if_printTree
(sourceFile (packageClause package (packageName main)) ; importDeclList (topLevelDeclList (topLevelDecl (declaration (typeDecl type (typeSpec Books (type (typeLit (structType struct { (fieldDeclList (fieldDecl (identifierList title) (type (typeName string))) ; (fieldDecl (identifierList author) (type (typeName string))) ; (fieldDecl (identifierList info) (type (typeName BookInfo))) optSemi) }))))))) ; (topLevelDecl (declaration (typeDecl type (typeSpec BookInfo (type (typeLit (structType struct { (fieldDeclList (fieldDecl (identifierList subject) (type (typeName string))) ; (fieldDecl (identifierList book_id) (type (typeName int))) optSemi) }))))))) ; (topLevelDecl (functionDecl func (functionName main) (function (signature (parameters ( ))) (functionBody (block { (statementList (statement (declaration (varDecl var (varSpec (identifierList Book1) (varSpecRem (type (typeName Books))))))) ; (statement (simpleStmt (assignment (expressionList (expression (unaryExpr (primaryExpr (primaryExpr (operand (operandName Book1))) (selector . title))))) (assignOp =) (expressionList (expression (unaryExpr (primaryExpr (operand (literal (basicLit "Go Programming")))))))))) ; (statement (simpleStmt emptyStmt)) optSemi) }))))) (optSemi ;)))
